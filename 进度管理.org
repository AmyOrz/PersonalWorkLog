* 4.11-5.01
*** TODO finish sceneTree refactor after finish gameObject's name feat
*** TODO finish demos(important!!!)
*** TODO data collection
**** give pv/dv, ... statistic
*** TODO 用户流程
**** 用户可以默认打开wonder-editor, 无需登录即可使用,但无法将信息保存到我们服务器,信息保存为indexDb,存在丢失风险
**** 读取/保存 项目
***** 没有登录
****** 访问本地indexDb看是否存在项目,存在则读取0出来进行选择
****** 保存为本地
***** 登录
****** 从服务器读取项目,进行选择
**** 读取配置文件:我们将从用户本地缓存中读取配置文件
***** 从服务器拉取默认配置,可以进行修改,保存到本地缓存,点击运行场景时读取配置进行渲染
***** 所以我们都将从用户本地缓存中读取配置文件
*** TODO ui
**** 使用css module 重写css https://github.com/camsong/blog/issues/5
* 2.26-4.10号需求整理
*** DONE add GameObject(0.5d)
**** TODO dispose gameObject keep order
*** DONE add component(0.5d)
*** DONE 运行与停止 (9天)
**** we need two canvas
**** 停止阶段不启动循环,每次根据事件改变state, 拿state去触发渲染一次
**** 运行时拿当前state去启动循环,读取js脚本,此时动态改变各属性,不保存该状态,停止既恢复到运行前的state
**** DONE 这里涉及到引擎启动和结束循环的问题,以及如何渲染单独帧的问题
**** DONE 需要知道引擎执行过程 
***** init -> loopBody 执行一次
***** 在loopService中封装了requestAnimationFrame, 需要保存在editorState中
***** DONE 如何处理事件,把需要改变state的事件放在哪里?
****** 放在getAndRefreshEngineState 上
**** DONE 需要2个engineState
***** 当addBox时, 需要使用getTwoEngineState
***** 当获取transform时, 只需要获取一个engineState
**** DONE redo/undo功能需要针对2个engineState
***** DONE 我们拿2个engineState去执行undo操作, 然后undo stack被执行了2次, 也就是2次undo
***** DONE 直接在allHistorySTate里添加forRun 和 forEdit, 这样直接一起undo/redo
***** TODO 需要stack存储run之前的state, 然后stop后restore
**** DONE 需要搭建对2个engineState的测试环境, 不然测试无法通过对engineStateForRun的测试
**** DONE 点击run的时候保存当前的堆栈信息, 在stop之后回来当前堆栈, 可以继续redo/undo
***** DONE controller redo/undo
****** 首先( undoStack, redoStack ) => (0,0) => | addGameObject | => (1,0) => | run | => (1,0) 压入controllerStack => | addGameObject | => (2,0) => | addGameObject | => (3,0)
****** => | undo | => (2,1) => | stop | => (1,0) => | redo | => (1,0) => | undo | => (0,0)
**** TODO add scene camera
***** it can't be disposed
**** TODO resize viewport 
**** TODO test
***** 引擎测试:
****** DONE 
engineSta          TestToolEngine.setFakeGl(sandbox);
          AllMaterialToolEngine.prepareForInit();teFomrRun and forEdit 的引擎测试
****** DONE addGameObject 
****** DONE disposeGameObject 
****** DONE addComponent 
****** DONE change transform
****** TODO change material
***** redo/undo 测试
****** DONE two engineState 在redo/undo时候的测试
****** DONE run and stop 的redo/undo测试
**** TODO store two currentGameObject uid in the editorState
**button click* TODO 资源管理 (9天)
**** TODO 资源树, ui
**** TODO 上传图片,js文件(获取base64缓存到indexDb)
**** TODO 将资源添加到GameObject
*** DONE asset tree
**** DONE remove folader
**** DONE drag folder 
***** DONE bug: 把一个treeNode拖放到自身, 出现错误
**** DONE move file
**** DONE upload json
**** DONE select file and remove file
**** DONE rename file and folder
**** DONE show folder
***** 把文件id存入currentFile
***** 使用currentSource标记来源, 在inspector显示来源信息

     
**** DONE [#A] //// 优化drag event, drag event listener too much
***** 在React中不会把所有的事件处理器绑定到相应的真实的DOM节点上，
***** 而是使用一个统一的事件监听器，把所有的事件绑定在最外层。
***** 当事件发生的时候，首先被这个统一的事件监听器处理，随后找到真正的事件处理函数进行调用，
***** 这样是为了提高效率，这是因为在UI系统中，事件处理器越多，那么占据的内存就越大，
***** React的做法是将其简化为一个，这样就大大提高了效率。
**** DONE merge master, 引入引擎新版本 
**** DONE test
***** DONE rename 
***** DONE header operate
**** TODO bug
***** TODO move gameObject2 to div, throw error
****** TODO not exec shouldUpdate method
       
***** DONE move file to root treeNode, the file not only exist in the origin treeNode, but also in root one
****** DONE fix 
****** TODO write test
*** TODO 导入和导出.wd文件 (9天)
**** 将项目导出为文件,使用jszip,压缩为一个包
**** 将项目导入进来,可以读取文件资源,渲染场景
*** TODO picking, 相机设置 (3天)
*** TODO transform
**** rotation
**** scale 


*** TODO asset tree 
**** open file by double click it
     e.g. add modal to show image
* after 1.0.0
*** TODO 材质贴图设置 (3天)
**** 从资源内获取纹理设置到GameObject

**** TODO 创建材质文件,可以直接复用材质
*** TODO js脚本 (3天)
*** TODO pwa 设置 (3天)
**** offline visit, cache
**** app shell
**** service worker
*** TODO mobile
**** can simulate mobile in editor
*** TODO 多人协作,改动同一个场景文件
*** TODO redo/undo stack 是否无限添加 
*** TODO UI
**** TODO show scroll bar in area(e.g. asset tree)
**** TODO hide asset-> file upload input dom 
*** TODO Asset
**** TODO sort file and folder by name
***** support chinese 
* 问题集合
** DONE 无法显示GameObject1
*** 删除GameObject2
*** 删除GameObject1
*** addGameObject
*** 执行undo
*** 执行undo
** TODO 点击运行后好像没什么提示,提示我已经开始run了
* TODO bug
*** DONE 先改变material, 再去改变transform, 点击undo, 直接回到初始状态
*** DONE 所有engine测试,2个engineState的currentGameObject不一样,所以需要进行获取对应的currentGameObject
*** DONE camera change size
**** step
***** click gameobject1 -> und --> click add box --> click add box


**** reason
     model matrix error?
     geometry vertices data error?


**** solution
     
*** DONE run and stop should check 
**** TODO finish test
     snapshot
*** DONE can't remove last camera(should exist at least one)
**** DONE finish test
*** DONE can't click dispose when not select
**** DONE finish test
*** TODO add sourceInstance component make specific gameObject disappear
*** TODO fix(extension): 

    

